@using ERPPlus.Application.DTOs
@using ERPPlus.BlazorUI.Services
@using Blazored.FluentValidation
@using Microsoft.AspNetCore.Components.Forms



@page "/products/edit/{Id:guid}"
@inject ProductService _productService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="product-form container shadow-sm p-4 rounded bg-white mt-4">
    <h2 class="form-title mb-4">Editar Produto</h2>

    @if (model is null)
    {
        <p class="text-muted">Carregando dados do produto...</p>
    }
    else
    {
        <EditForm Model="model" OnValidSubmit="HandleValidSubmit" FormName="product-edit-form">
            <FluentValidationValidator />

            <div class="form-group mb-3">
                <label for="name" class="form-label">Nome</label>
                <InputText id="name" class="form-control custom-input" @bind-Value="model.Name" />
                <ValidationMessage For="@(() => model.Name)" />
            </div>

            <div class="form-group mb-4">
                <label for="price" class="form-label">Preço</label>
                <InputNumber id="price" class="form-control custom-input" @bind-Value="model.Price" />
                <ValidationMessage For="@(() => model.Price)" />
            </div>

            <button type="submit" class="btn btn-success w-100">Salvar alterações</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-info mt-4">@message</div>
        }
    }
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private ProductDTO? model;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            model = await _productService.GetByIdAsync(Id);
        }
        catch (Exception ex)
        {
            message = $"Erro ao carregar produto: {ex.Message}";
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var sucesso = await _productService.UpdateAsync(model!);
            if (sucesso)
            {
                message = "Produto atualizado com sucesso!";
                NavigationManager.NavigateTo("/products");
            }
            else
            {
                message = "Erro ao atualizar produto.";
            }
        }
        catch
        {
            message = "Erro inesperado ao tentar atualizar.";
        }
    }
}
